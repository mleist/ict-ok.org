<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    i18n_domain="org.ict_ok"
    >

    <!-- $Id$ -->

    <!-- Copyright (c) 2004, 2005, 2006, 2007, 2008,
        Markus Leist <leist@ikom-online.de> -->

    <interface
        interface=".interfaces.IHost"
        type="zope.app.content.interfaces.IContentType"
        />
    
    <class class=".host.Host">
        <implements
            interface="zope.annotation.interfaces.IAttributeAnnotatable"
            />
        <implements
            interface="zope.app.container.interfaces.IContentContainer"
            />
        <factory
            id="org.ict_ok.components.host.host.Host"
            description="Host"
            />
        <require
            permission="org.ict_ok.components.host.View"
            interface=".interfaces.IHost"
            />
        <require
            permission="org.ict_ok.components.host.Edit"
            set_schema=".interfaces.IHost"
            />
    </class>

    <subscriber
        handler=".bootstrap.bootStrapSubscriber"
        for="zope.app.appsetup.IDatabaseOpenedEvent"
        />

    <adapter
        factory=".adapter.sized.HostSized"
        />
    <adapter
        factory=".adapter.state.State"
        />
    <adapter
        factory=".adapter.namechooser.HostNameChooser"
        />
    <adapter
        factory=".adapter.ipickle.Pickle"
    />
    <adapter
        factory="org.ict_ok.components.host.adapter.search.Searchable"
    />
    <adapter
        factory="org.ict_ok.components.host.adapter.snmp.Snmptrapd"
    />
    
    <adapter
        factory="org.ict_ok.components.superclass.adapter.obj_data.BrwsOverview"
        provides="org.ict_ok.components.superclass.interfaces.IBrwsOverview"
        for=".interfaces.IHost"
    />

    <!--<utility-->
        <!--provides="zope.schema.interfaces.IVocabularyFactory"-->
        <!--component=".host.AllHostGroups"-->
        <!--name="AllHostGroups"-->
        <!--/>-->

    <utility
        provides="zope.schema.interfaces.IVocabularyFactory"
        component=".host.AllHostProductionStates"
        name="AllHostProductionStates"
        />

    <!--subscriber handler=".objmq.notifyAddedEvent" /-->
    <!--subscriber handler=".objmq.notifyModifiedEvent" /-->
    <!--subscriber handler=".objmq.notifyMovedEvent" /-->
    <!--subscriber handler=".objmq.notifyRemovedEvent" /-->

    <include package=".browser" />
    <include package=".generations" />

</configure>
