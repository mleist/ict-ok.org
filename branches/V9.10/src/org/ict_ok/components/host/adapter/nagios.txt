    >>> from org.ict_ok.components.host.adapter.nagios import *

Import of all used by GenNagios components, functions etc.

    >>> import logging
    >>> from datetime import datetime
    >>> from pytz import timezone
    >>> from zope.interface import implements
    >>> from zope.component import adapts
    >>> from org.ict_ok.components.interface.interfaces import IInterface
    >>> from org.ict_ok.components.host.interfaces import IHost
    >>> from org.ict_ok.components.supernode.adapter.nagios import GenNagios as ParentGenNagios
    >>> from org.ict_ok.admin_utils.generators.nagios.interfaces import IGenNagios
    >>> from org.ict_ok.version import getIkVersion

Import of needed components, zope and testing stuff

    >>> from zope.interface.verify import verifyObject
    >>> from org.ict_ok.components.host.host import Host
    >>> from zope.schema import vocabulary
    >>> from org.ict_ok.admin_utils.eventcrossbar.eventcrossbar import AllEventInstances
    >>> from zope.interface.verify import verifyObject
    >>> from org.ict_ok.components.interface.interface import Interface

register Vocabulery

    >>> vr = vocabulary.getVocabularyRegistry()
    >>> vr.register('AllEventInstances', AllEventInstances)
    
    >>> i2 = Interface()
    >>> h2 = Host()
    ICT_OkInitializeWorkItem.start
    ICT_OkInitializeWorkItem.finish
    ICT_OkStartWorkItem.start
    ICT_OkStartWorkItem.finish
    NagiosCheckWorkItem.start
    >>> len(h2)
    0
    >>> h2.items()
    <OOBTreeItems object at ...>
    >>> list(h2.items())
    []
    >>> h2['if2name'] = i2
    >>> list(h2.items())
    [(u'if2name', <org.ict_ok.components.interface.interface.Interface object at ...>)]
    >>> len(h2)
    1
    >>> h2['if2name']
    <org.ict_ok.components.interface.interface.Interface object at ...>
    >>> ha = GenNagios(h2)
    >>> ha.fileOpen()
    >>> import sys
    >>> ha_fold = ha.fpCfg
    >>> ha.fpCfg = sys.stdout
    >>> ha.traverse4nagiosGeneratorPre(0, False)
    define host {
        use generic-host
        host_name ...
        display_name ...
        notes ...
        alias systemname
    >>> ha.traverse4nagiosGeneratorBody(0, False)
    >>> ha.traverse4nagiosGeneratorPost(0, False)
        check_command check-host-alive
        max_check_attempts 3
        contact_groups admins
        notification_interval 0
        notification_period 24x7
        notification_options d,u,r
    }
    <BLANKLINE>
    >>> ha.fpCfg = ha_fold
    >>> ha.fileClose()

builds a test host

    >>> host = Host()
    ICT_OkInitializeWorkItem.start
    ICT_OkInitializeWorkItem.finish
    ICT_OkStartWorkItem.start
    ICT_OkStartWorkItem.finish
    NagiosCheckWorkItem.start

adapts the test host

    >>> nagios = GenNagios(host)

verify adaption with the Interface
    >>> verifyObject(IGenNagios, nagios)
    True

Test existence

    >>> import os.path
    >>> nagios.fileOpen()
    >>> os.path.isfile('/opt/nagios/etc/ict_ok/Hosts/%s.cfg' % nagios.context.getObjectId())
    True
    >>> nagios.nagiosConfigFileRemove()
    >>> os.path.isfile('/opt/nagios/etc/ict_ok/Hosts/%s.cfg' % nagios.context.getObjectId())
    False
    >>> nagios.nagiosConfigFileRemove()
    Traceback (most recent call last):
      ...
    Exception: No such configfile: '...'
