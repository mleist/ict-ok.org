# -*- coding: utf-8 -*-
#
# [[[cog
#    import sys; sys.path.extend(['.'])
#    import props
#    import cog
#    cog.out("# Copyright (c) ")
#    for year in props.copyrights:
#        cog.out("%4d, " % year)
#    cog.outl()
#    for author in props.authors:
#       cog.outl("#               %s <%s>" % (author['name'], author['email']))
#    cog.out("%s" % props.filename ) ]]]
# Copyright (c) 2006, 2007, 
#               Markus Leist <leist@ikom-online.de>
# [[[end]]]
# See also LICENSE.txt or http://www.ict-ok.org/LICENSE
# This file is part of ict-ok.org.
#
# $Id$
#
# pylint: disable-msg=E0213,W0232
#
# [[[cog cog.outl('"""Interface of %(componentname)s"""' % props.__dict__)]]]
"""Interface of TestMod"""
# [[[end]]]


__version__ = "$Id$"

# zope imports
from zope.interface import Interface
from zope.i18nmessageid import MessageFactory
from zope.schema import Choice, Int, List, TextLine
from zope.app.folder.interfaces import IFolder

_ = MessageFactory('org.ict_ok')


#[[[cog
#   cog.out('''\
#   class I%(componentname)s(Interface):
#       """A %(componentname)s object."""
#   ''' % props.__dict__, dedent=True)
#]]]
#[[[end]]]
    #[[[cog
    #   for (varName, schema, displayName, displayDescription) in props.attrTuples:
    #       cog.out('''\
    #           
    #           %s = %s(
    #               title = _(u'%s'),
    #               description = _(u"%s"),
    #               required = False)
    #       ''' % (varName, schema, displayName, displayDescription), dedent=True)
    #]]]
    #[[[end]]]
    #[[[cog
    #   for (varName, displayName, otherClassName) in props.connInTuples:
    #       cog.out('''\
    #           
    #           %s = Choice(
    #               title = _(u'%s'),
    #               vocabulary = 'All%ss',
    #               required = False)
    #       ''' % (varName, displayName, otherClassName), dedent=True)
    #]]]
    #[[[end]]]
    #[[[cog
    #   for (varName, displayName, otherClassName) in props.connOutTuples:
    #       cog.out('''\
    #           
    #           %s = List(
    #               title = _(u'%s'),
    #               value_type=Choice(vocabulary='AllUnusedOrUsed%s%ss'),
    #               default=[],
    #               required = False)
    #       ''' % (varName, displayName, props.__dict__['componentname'], otherClassName), dedent=True)
    #]]]
    #[[[end]]]
#[[[cog
#   cog.out('''\
#       def trigger_online():
#           """
#           trigger workflow
#           """
#
#
#   class I%(componentname)sFolder(Interface):
#       """Container for %(componentname)s objects
#       """
#
#
#   class IAdd%(componentname)s(Interface):
#       """Interface for all Objects"""
#       template = Choice(
#           title = _("Template"),
#           vocabulary="All%(componentname)sTemplates",
#           required = False)
#   ''' % props.__dict__, dedent=True)
#]]]
#[[[end]]]
