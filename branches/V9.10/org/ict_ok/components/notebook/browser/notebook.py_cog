# -*- coding: utf-8 -*-
#
# [[[cog
#    import sys; sys.path.extend(['.'])
#    import props
#    import cog
#    cog.out("# Copyright (c) ")
#    for year in props.copyrights:
#        cog.out("%4d, " % year)
#    cog.outl()
#    for author in props.authors:
#       cog.outl("#               %s <%s>" % (author['name'], author['email']))
#    cog.out("%s" % props.filename ) ]]]
# Copyright (c) 2006, 2007, 
#               Markus Leist <leist@ikom-online.de>
# [[[end]]]
# See also LICENSE.txt or http://www.ict-ok.org/LICENSE
# This file is part of ict-ok.org.
#
# $Id$
#
# pylint: disable-msg=W0232,W0142
#
# [[[cog cog.outl('"""implementation of browser class of %(componentname)s"""' % props.__dict__)]]]
# [[[end]]]

__version__ = "$Id$"

# python imports

# zope imports
from zope.i18nmessageid import MessageFactory

# z3c imports
from z3c.form import field

# ict_ok.org imports
#[[[cog
#   cog.out('''\
#   from %(longpath_interface)s import I%(componentname)s
#   from %(longpath_file)s import %(componentname)s
#   ''' % props.__dict__, dedent=True)
#]]]
#[[[end]]]
from org.ict_ok.components.browser.component import ComponentDetails
from org.ict_ok.components.superclass.interfaces import IBrwsOverview
from org.ict_ok.skin.menu import GlobalMenuSubItem
from org.ict_ok.components.superclass.browser.superclass import \
     AddForm, DeleteForm, DisplayForm, EditForm

_ = MessageFactory('org.ict_ok')


# --------------- menu entries -----------------------------


#[[[cog
#   cog.out('''\
#   class MSubAdd%(componentname)s(GlobalMenuSubItem):
#       """ Menu Item """
#       title = _(u'Add %(moduletitle)s')
#       viewURL = 'add_%(filename)s.html'
#
#       weight = 50
#   ''' % props.__dict__, dedent=True)
#]]]
#[[[end]]]

# --------------- object details ---------------------------


#[[[cog
#   cog.out('''\
#   class %(componentname)sDetails(ComponentDetails):
#       """ Class for %(componentname)s details
#       """
#       omit_viewfields = ComponentDetails.omit_viewfields + []
#       omit_addfields = ComponentDetails.omit_addfields + []
#       omit_editfields = ComponentDetails.omit_editfields + []
#   ''' % props.__dict__, dedent=True)
#]]]
#[[[end]]]

# --------------- forms ------------------------------------


#[[[cog
#   cog.out('''\
#   class Details%(componentname)sForm(DisplayForm):
#       """ Display form for the object """
#       label = _(u'settings of %(moduletitle)s')
#       fields = field.Fields(I%(componentname)s).omit(*%(componentname)sDetails.omit_viewfields)
#
#
#   class Add%(componentname)sForm(AddForm):
#       """Add %(moduletitle)s form"""
#       label = _(u'Add %(moduletitle)s')
#       fields = field.Fields(I%(componentname)s).omit(*%(componentname)sDetails.omit_addfields)
#    
#       factory = %(componentname)s
#
#
#   class Edit%(componentname)sForm(EditForm):
#       """ Edit for %(moduletitle)s """
#       label = _(u'%(moduletitle)s Edit Form')
#       fields = field.Fields(I%(componentname)s).omit(*%(componentname)sDetails.omit_editfields)
#
#
#   class Delete%(componentname)sForm(DeleteForm):
#       """ Delete the %(moduletitle)s """
#       
#       def getTitle(self):
#           """this title will be displayed in the head of form"""
#           return _(u"Delete this %(componentname)s: '%%s'?") %% \\
#                  IBrwsOverview(self.context).getTitle()
#
#   ''' % props.__dict__, dedent=True)
#]]]
#[[[end]]]
