# -*- coding: utf-8 -*-
#
# [[[cog
#    import sys; sys.path.extend(['.'])
#    import props
#    import cog
#    cog.out("# Copyright (c) ")
#    for year in props.copyrights:
#        cog.out("%4d, " % year)
#    cog.outl()
#    for author in props.authors:
#       cog.outl("#               %s <%s>" % (author['name'], author['email']))
#    cog.out("%s" % props.filename ) ]]]
# Copyright (c) 2006, 2007, 
#               Markus Leist <leist@ikom-online.de>
# [[[end]]]
# See also LICENSE.txt or http://www.ict-ok.org/LICENSE
# This file is part of ict-ok.org.
#
# $Id$
#
# pylint: disable-msg=E1101,W0142
#
# [[[cog cog.outl('"""implementation of %(componentname)s"""' % props.__dict__)]]]
# [[[end]]]

__version__ = "$Id$"

# python imports

# zope imports
from zope.interface import implements
from zope.schema.fieldproperty import FieldProperty
from zope.app.intid.interfaces import IIntIds
from zope.schema.vocabulary import SimpleVocabulary, SimpleTerm

# ict_ok.org imports
#[[[cog
#   cog.out('''\
#   from %(longpath_interface)s import I%(componentname)s
#   ''' % props.__dict__, dedent=True)
#]]]
#[[[end]]]
from org.ict_ok.components.component import Component

#[[[cog
#   cog.out('''\
#   def All%(componentname)ss(dummy_context):
#       """Which %(componentname)s are there
#       """
#       terms = []
#       uidutil = getUtility(IIntIds)
#       for (oid, oobj) in uidutil.items():
#           if I%(componentname)s.providedBy(oobj.object):
#               myString = u"%%s / %%s" %% (locationObj.getDcTitle(),
#                                     oobj.object.getDcTitle())
#               terms.append(\
#                   SimpleTerm(oobj.object.objectID,
#                              str(oobj.object.objectID),
#                              myString))
#       return SimpleVocabulary(terms)
#   ''' % props.__dict__, dedent=True)
#]]]
#[[[end]]]


#[[[cog
#   cog.out('''\
#   class %(componentname)s(Component):
#       """
#       the template instance
#       """
#       implements(I%(componentname)s)
#       shortName = "%(filename)s"
#       # for ..Contained we have to:
#       __name__ = __parent__ = None
#       attrFoo = FieldProperty(I%(componentname)s['attrFoo'])
#
#       def __init__(self, **data):
#           """
#           constructor of the object
#           """
#           Component.__init__(self, **data)
#           for (name, value) in data.items():
#               if name in I%(componentname)s.names():
#                   setattr(self, name, value)
#           self.ikRevision = __version__
#   ''' % props.__dict__, dedent=True)
#]]]
#[[[end]]]
